{"version":3,"file":"static/js/936.c33d7308.chunk.js","mappings":"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","sources":["Services/API-key.js","Services/API-query.js","webpack://goit-react-hw-05-movies/./src/components/NotFound/NotFound.module.css?3aa0","components/NotFound/NotFound.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// token\n//eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMjkxMTcxYjhjZTRjZGU5MGVmNTg4ZGExMWM1MjJkZSIsInN1YiI6IjY0ZjI2Y2Y0Y2FhNTA4MDE0YzhjNTUwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tkhPtd_rA2592Ltmf18lfBaxnKNFebdqiWffqOCHY_I\n//API_KEY\n// c291171b8ce4cde90ef588da11c522de\n\nconst API_KEY = 'Bearer c291171b8ce4cde90ef588da11c522de';\nconst API_TOKEN = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMjkxMTcxYjhjZTRjZGU5MGVmNTg4ZGExMWM1MjJkZSIsInN1YiI6IjY0ZjI2Y2Y0Y2FhNTA4MDE0YzhjNTUwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tkhPtd_rA2592Ltmf18lfBaxnKNFebdqiWffqOCHY_I';\n\nexport { API_KEY, API_TOKEN };","import { API_TOKEN } from \"./API-key\";\n\nconst MAIN_URL = 'https://api.themoviedb.org/3/trending/movie/week?language=en-US';\nconst options = {\n    method: 'GET',\n    headers: {\n    accept: 'application/json',\n    Authorization: API_TOKEN,\n  }\n};\n\nexport const ApiTrendsMovie = () => {\n    return fetch(MAIN_URL, options)\n        .then(response => {\n            return response.json();\n        });\n};\n\nexport const ApiFindMovie = (queryValue) => {\n    const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?query=${queryValue}&language=en-US&page=1`;\n    return fetch(SEARCH_URL, options)\n        .then(response => {\n            return response.json()\n        });\n }\n\nexport const ApiMovieDetails = (movieId) => { \n    const DETAIL_URL = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n    return fetch(DETAIL_URL, options)\n        .then(response => {\n            return response.json();\n        });\n}\n\nexport const ApiMovieReview = (movieId) => {\n    const REVIEW_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n    return fetch(REVIEW_URL, options)\n        .then(response => {\n            return response.json();\n        });\n}\n\nexport const ApiMovieCredits = (movieId) => {\n    const CREDITS_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n    return fetch(CREDITS_URL, options)\n        .then(response => {\n            return response.json();\n        });\n}","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"NotFound_errorMessage__24Hhg\"};","import Style from './NotFound.module.css';\nimport PropTypes from 'prop-types';\n\nconst NotFound = ({ message }) => {\n    return (<div className={Style.errorMessage}> {message} </div> )\n}\n \nexport default NotFound;\n\nNotFound.propTypes = {\n    message: PropTypes.string,\n};","// extracted by mini-css-extract-plugin\nexport default {\"mainInfo\":\"MovieCard_mainInfo__aUYgo\",\"poster\":\"MovieCard_poster__B9RSd\",\"addInfo\":\"MovieCard_addInfo__UyJnl\"};","import { Link, Outlet } from \"react-router-dom\";\nimport Style from './MovieCard.module.css';\nimport PropTypes from 'prop-types';\nimport { Suspense } from \"react\";\nimport Loader from '../../components/Loader';\n\nconst MovieCard = ({ movies }) => {\n    const {\n        genres,\n        vote_average,\n        original_title,\n        release_date,\n        overview,\n        poster_path } = movies;\n    const rating = vote_average ? `${Math.round(vote_average * 10)}%`: \"Absent!\";\n    const year = release_date ? release_date.slice(0, 4) : \"Absent!\";\n    const genresList = genres.map(genre => genre.name).join(', ');\n    const poster_link = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : `https://upload.wikimedia.org/wikipedia/commons/c/c8/ImageNA.svg`;\n    return (\n        \n        <section>\n            <div className={Style.mainInfo}>\n            <div >\n                <img src={poster_link} className={Style.poster} alt={original_title}/>\n            </div>\n            <div> <h1>{original_title}({year})</h1>\n                <p>User Scores: {rating}</p>\n                <h2>Overview:</h2>\n                <p>{overview ? overview : \"Information is absent!\"}</p>\n                <h2>Genres:</h2>\n                <p>{genresList ? genresList : \"Information is absent!\"}</p>\n                </div>\n        </div>\n        <h3 className={Style.addInfo}>Additional information</h3>\n            <ul>\n                <li>\n                    <Link to='cast'>Cast</Link>\n                </li>\n                <li>\n                    <Link to='reviews'>Reviews</Link>\n                </li>\n            </ul>\n            <Suspense fallback={<Loader/>}>\n                <Outlet/>\n            </Suspense> \n        </section>\n    )\n}\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n    movies: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"Button_backLink__2-Ckv\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Style from './Button.module.css';\n\nconst Button = ({ location }) => { \n    return (\n        <>\n            <Link to={location} className={Style.backLink}>&#11013; Back to</Link>\n        </>\n    );\n}\n\nexport default Button;\n\nButton.propTypes = {\n    location: PropTypes.any.isRequired,\n};","import { useParams, useLocation } from \"react-router-dom\";\nimport { useEffect, useState, useRef} from \"react\";\nimport { ApiMovieDetails } from \"../../Services/API-query\";\nimport MovieCard from '../../components/MovieCard';\nimport Loader from '../../components/Loader';\nimport NotFound from '../../components/NotFound';\nimport Button from '../../components/Button';\n\nconst STATUS = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved',\n}\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const linkBack = useRef(location.state?.from ?? '/');\n\n    const { movieId } = useParams();\n    const [movieDetail, setMovieDetail] = useState({});\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const [error, setError] = useState(null);\n\n    console.log(location);\n    console.log(linkBack);\n \n    useEffect(() => {\n            setStatus(STATUS.PENDING);\n\n        ApiMovieDetails(movieId).then((results) => {\n            if (!results) {\n                setStatus(STATUS.REJECTED);\n                setError('Movie details not found!');\n                return;\n            }\n            setMovieDetail(results);\n            setStatus(STATUS.RESOLVED);\n            setError('');\n\n        });\n        }, [movieId]);\n       \n    return (\n    \n    <div>\n        <Button location={linkBack.current} />\n        {status === STATUS.PENDING && <Loader/>}\n        {status === STATUS.REJECTED && <NotFound message={error} />}\n        {status === STATUS.RESOLVED && <MovieCard movies={movieDetail} />}\n    </div> \n    )\n}\n\nexport default MovieDetails;"],"names":["options","method","headers","accept","Authorization","ApiTrendsMovie","fetch","then","response","json","ApiFindMovie","queryValue","SEARCH_URL","ApiMovieDetails","movieId","DETAIL_URL","ApiMovieReview","REVIEW_URL","ApiMovieCredits","CREDITS_URL","message","className","Style","movies","genres","vote_average","original_title","release_date","overview","poster_path","rating","Math","round","year","slice","genresList","map","genre","name","join","poster_link","src","alt","to","Suspense","fallback","Loader","location","STATUS","useLocation","linkBack","useRef","state","from","useParams","useState","movieDetail","setMovieDetail","status","setStatus","error","setError","console","log","useEffect","results","current","NotFound"],"sourceRoot":""}